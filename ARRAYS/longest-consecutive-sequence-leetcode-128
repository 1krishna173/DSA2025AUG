Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

You must write an algorithm that runs in O(n) time.
Example 1:

Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.
Example 2:

Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9
Example 3:

Input: nums = [1,0,1,2]
Output: 3

class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        int n=nums.size();
        if(n==0)return 0;
        int longest=0;
        unordered_set<int> temp(nums.begin(),nums.end());
        for(auto num: temp){//iterating in set to avoid the duplicates check in the array
            
            if(!temp.count(num-1)){
                int start=num;
                int len=1;
                start++;
                while(temp.count(start)){
                    len++;
                    start++;
                }
                longest=max(longest,len);
            }
        }
        return longest;
    }
};
